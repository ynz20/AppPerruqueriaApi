{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "This is the API documentation for the authentication module.",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account and returns an API token.",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "dni": {
                                        "type": "string",
                                        "example": "12345678X"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "nick": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "telf": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "StrongPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "StrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuari registrat correctament"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "api_token_string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "description": "Authenticates a user using email or nickname and password.",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "nick": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "StrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "api_token_string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Benvingut"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "role": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Credencials Incorrectes"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "description": "Logs out the currently authenticated user.",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "description": "Returns a list of all available clients",
                "operationId": "af1f3794367a5e843bf15e3a9033d911",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Adds a new client to the system",
                "operationId": "15981a5da120d8b4ea1b91b05a35622b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a client",
                "description": "Returns information about a specific client",
                "operationId": "2965e9737f628d15ea88209095622c24",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a client",
                "description": "Updates the information of a specific client",
                "operationId": "162fed3ea25bb60bf0b156c7b21313e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "description": "Deletes a client from the system",
                "operationId": "20de5e8bdef993807384fd7040f9ae92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Client deleted successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve all products",
                "description": "Returns a list of all available products",
                "operationId": "c1ff6f862214e1896c59cfe0491ce0e8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Adds a new product to the system",
                "operationId": "399770d33fa4672f1216707d0e236763",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a specific product",
                "description": "Returns a product by its ID",
                "operationId": "b46f4aa73232d0368eee698a082342a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Updates the details of a specific product",
                "operationId": "1419d479f9340e30e67fe21a2ca525b7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Deletes a product from the system",
                "operationId": "fe34b364a3f192305598b65d04d06b5d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Retrieve all reservations",
                "description": "Returns a list of all reservations",
                "operationId": "69fb15b9890a0559eb50e5e1777d9b64",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a new reservation",
                "description": "Adds a new reservation",
                "operationId": "1aabc7d432cc652e63cfc3fb514132cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reservation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Retrieve a specific reservation",
                "description": "Fetches a reservation by its ID.",
                "operationId": "4472ee4ed670cd72b7969d6e32473b92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservation": {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reserva trobada"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Reservation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reserva no trobada"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update a reservation",
                "description": "Updates an existing reservation with the provided data.",
                "operationId": "3cb121a7272b76103c947578223bb7d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "description": "Date of the reservation",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "hour": {
                                        "description": "Starting hour of the reservation in HH:mm format",
                                        "type": "string",
                                        "example": "14:00"
                                    },
                                    "worker_dni": {
                                        "description": "DNI of the worker handling the reservation",
                                        "type": "string",
                                        "example": "12345678X"
                                    },
                                    "client_dni": {
                                        "description": "DNI of the client making the reservation",
                                        "type": "string",
                                        "example": "87654321X"
                                    },
                                    "service_id": {
                                        "description": "ID of the service being reserved",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shift_id": {
                                        "description": "Shift ID associated with the reservation",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "status": {
                                        "description": "Status of the reservation",
                                        "type": "string",
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservation": {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reserva actualitzada correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al actualitzar la reserva"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Delete a reservation",
                "description": "Deletes a reservation by its ID.",
                "operationId": "fa964cce3285d6c10989429c544421ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reserva eliminada correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al eliminar la reserva"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/available-workers": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get available workers for a reservation",
                "description": "Returns a list of workers available for a given date, time, and service.",
                "operationId": "f71d10fe80b9ecb5d2ad6931a2da6092",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date of the reservation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "query",
                        "description": "Hour of the reservation in HH:mm format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "time",
                            "example": "14:00"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "ID of the service for which to find available workers",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available workers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "workers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "El servei seleccionat no existeix."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving available workers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al obtenir els treballadors disponibles."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/client/{dni}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservations by client",
                "description": "Returns all reservations associated with a specific client based on their DNI.",
                "operationId": "ddab0332cd4c1baa0afc2f4a88b273b8",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "path",
                        "description": "DNI of the client",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "87654321X"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reservations for the client retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reservation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No reservations found for the client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No s'han trobat reserves per aquest client."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving reservations for the client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Hi ha hagut un problema en carregar les reserves."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/worker/{dni}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservations by worker",
                "description": "Returns all reservations assigned to a specific worker based on their DNI.",
                "operationId": "336a9fe3619fe777a9cf7e9ddb59b472",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "path",
                        "description": "DNI of the worker",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345678X"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reservations for the worker retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reservation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No reservations found for the worker",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No s'han trobat reserves per aquest treballador."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving reservations for the worker",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Hi ha hagut un problema en carregar les reserves."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}/status": {
            "put": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update reservation status",
                "description": "Updates the status of a reservation. If the status is 'completed', it assigns an open shift if available.",
                "operationId": "b1f4353da1edb548d96230f560da2636",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "New status of the reservation",
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservation": {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Estat de la reserva actualitzat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No open shift available for the reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No hi ha cap torn obert per assignar a aquesta reserva."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating reservation status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al actualitzar l'estat de la reserva"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}/rate": {
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Rate a reservation",
                "description": "Adds a rating and an optional comment to a reservation.",
                "operationId": "3664f8dbe5ed4bc8974ab8c5ce9d87e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to rate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Rating value between 1 and 5",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "comment": {
                                        "description": "Optional comment for the reservation",
                                        "type": "string",
                                        "example": "Great service!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation rated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reservation": {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Valoració afegida correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error adding the rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al afegir la valoració"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Retrieve all services",
                "description": "Returns a list of all available services.",
                "operationId": "96950feb4aaa0ea9dd7db3b3838bd669",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Service"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Llista de serveis"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Adds a new service to the system.",
                "operationId": "712dc5ef305b550f23a52b0c47606882",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Haircut"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A professional haircut service."
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 25.99
                                    },
                                    "estimation": {
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Servei creat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al crear el servei"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Retrieve a specific service",
                "description": "Fetches a service by its ID.",
                "operationId": "95c29468312a2180cbbd984d8a78956a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "service": {
                                            "$ref": "#/components/schemas/Service"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Servei trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Servei no trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Updates an existing service with the provided data.",
                "operationId": "d86b5903ff77772f3c6964f7f7b8bea5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Haircut Deluxe"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "An advanced haircut service."
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 35.99
                                    },
                                    "estimation": {
                                        "type": "integer",
                                        "example": 45
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Servei actualitzat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al actualitzar el servei"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Deletes a service by its ID.",
                "operationId": "fd9c6358cc2bcf0bbc38ddf9a6b658cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Servei eliminat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al eliminar el servei"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services/list": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "description": "Returns a list of services with customized information.",
                "operationId": "c9b232617600cb605c3ed1919d9e6c39",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Service"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Llista de serveis"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shifts": {
            "get": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Retrieve all shifts",
                "description": "Returns a list of all shifts with their related reservations, services, clients, and users.",
                "operationId": "3d46ea27be8c56655adc7e1fa6a4a202",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "shifts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Shift"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Llista de torns"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving shifts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Create a new shift",
                "description": "Adds a new shift to the system.",
                "operationId": "59c5d592b8719731e025b74e2cc6c5ca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_time": {
                                        "description": "Start time of the shift",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T08:00:00Z"
                                    },
                                    "end_time": {
                                        "description": "End time of the shift (nullable)",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T16:00:00Z"
                                    },
                                    "date": {
                                        "description": "Date of the shift",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shift created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "shift": {
                                            "$ref": "#/components/schemas/Shift"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn creat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating shift",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shifts/{id}": {
            "get": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Retrieve a specific shift",
                "description": "Fetches a shift by its ID.",
                "operationId": "b461e56db966ec98971e946e37cc9c1f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shift to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "shift": {
                                            "$ref": "#/components/schemas/Shift"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shift not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn no trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Update a shift",
                "description": "Updates an existing shift with the provided data.",
                "operationId": "0466e87e71dd0d167dc015c70a2828e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shift to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_time": {
                                        "description": "Start time of the shift",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T08:00:00Z"
                                    },
                                    "end_time": {
                                        "description": "End time of the shift",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T16:00:00Z"
                                    },
                                    "date": {
                                        "description": "Date of the shift",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shift updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "shift": {
                                            "$ref": "#/components/schemas/Shift"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn actualitzat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating shift",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Delete a shift",
                "description": "Deletes a shift by its ID.",
                "operationId": "92f71eea4ce9f5c3ea061974c036e27f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shift to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn eliminat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting shift",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shifts/toggle": {
            "post": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Toggle the active shift",
                "description": "Closes the active shift if one is open, or creates a new shift if none is active.",
                "operationId": "45ad7bab9025cdffacbc80dfac08c159",
                "responses": {
                    "200": {
                        "description": "Shift toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn tancat correctament"
                                        },
                                        "shift": {
                                            "$ref": "#/components/schemas/Shift"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "New shift created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "shift": {
                                            "$ref": "#/components/schemas/Shift"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Torn creat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error toggling shift",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en gestionar el torn: Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shifts/status": {
            "get": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Get the current shift status",
                "description": "Checks if there is an active shift (a shift with no end time).",
                "operationId": "ce4daca7ce4116c59baad97d33253a85",
                "responses": {
                    "200": {
                        "description": "Shift status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "active": {
                                            "description": "True if there is an active shift, false otherwise",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving shift status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en obtenir l'estat del torn: Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve all users",
                "description": "Returns a list of all users.",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Llista d'usuaris"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a specific user",
                "description": "Fetches a user by their ID.",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuari trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuari no trobat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{dni}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Updates an existing user with the provided data.",
                "operationId": "a196e1e0385f209e0063dd14ce850210",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "path",
                        "description": "DNI of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345678X"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "First name of the user",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "description": "Last name of the user",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "nick": {
                                        "description": "Nickname of the user",
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "telf": {
                                        "description": "Telephone number of the user",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "email": {
                                        "description": "Email address of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "StrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuari actualitzat correctament"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error en la validació de dades"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al actualitzar l'usuari"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/workers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users (workers)",
                "description": "Returns a list of all users in the system.",
                "operationId": "a9b90fb21ca7240d04ba7773be49a498",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Llista d'usuaris"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678X"
                    },
                    "name": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "nick": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "telf": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Client": {
                "title": "Client",
                "description": "Client model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptop"
                    },
                    "description": {
                        "type": "string",
                        "example": "High-performance laptop"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 999.99
                    },
                    "stock": {
                        "type": "integer",
                        "example": 50
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation",
                "description": "Reservation model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "hour": {
                        "type": "string",
                        "example": "14:00"
                    },
                    "worker_dni": {
                        "type": "string",
                        "example": "12345678X"
                    },
                    "client_dni": {
                        "type": "string",
                        "example": "87654321X"
                    },
                    "service_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "shift_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "rating": {
                        "type": "integer",
                        "example": 4
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great service!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Service": {
                "title": "Service",
                "description": "Service model schema",
                "properties": {
                    "id": {
                        "description": "ID of the service",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the service",
                        "type": "string",
                        "example": "Haircut"
                    },
                    "description": {
                        "description": "Description of the service",
                        "type": "string",
                        "example": "A professional haircut service"
                    },
                    "price": {
                        "description": "Price of the service",
                        "type": "number",
                        "format": "float",
                        "example": 25.99
                    },
                    "estimation": {
                        "description": "Estimated time in minutes for the service",
                        "type": "integer",
                        "example": 30
                    },
                    "created_at": {
                        "description": "Timestamp when the service was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the service was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Shift": {
                "title": "Shift",
                "description": "Shift model schema",
                "properties": {
                    "id": {
                        "description": "ID of the shift",
                        "type": "integer",
                        "example": 1
                    },
                    "start_time": {
                        "description": "Start time of the shift",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T08:00:00Z"
                    },
                    "end_time": {
                        "description": "End time of the shift",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T16:00:00Z"
                    },
                    "date": {
                        "description": "Date of the shift",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "created_at": {
                        "description": "Timestamp when the shift was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the shift was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "auth"
        },
        {
            "name": "Clients",
            "description": "Clients"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Services",
            "description": "Services"
        },
        {
            "name": "Shifts",
            "description": "Shifts"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}